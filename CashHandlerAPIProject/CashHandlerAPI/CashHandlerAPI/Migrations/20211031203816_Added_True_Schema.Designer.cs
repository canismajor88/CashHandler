// <auto-generated />
using System;
using CashHandlerAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CashHandlerAPI.Migrations
{
    [DbContext(typeof(CashHandlerDBContext))]
    [Migration("20211031203816_Added_True_Schema")]
    partial class Added_True_Schema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CashHandlerAPI.Models.CashBalance", b =>
                {
                    b.Property<long>("CashBalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CashBalanceId");

                    b.ToTable("CashBalance");
                });

            modelBuilder.Entity("CashHandlerAPI.Models.MoneyAmount", b =>
                {
                    b.Property<long>("MoneyAmountId")
                        .HasColumnType("bigint")
                        .HasColumnName("MoneyAmountID");

                    b.Property<int?>("DimesAmount")
                        .HasColumnType("int");

                    b.Property<int?>("DollarCoinAmount")
                        .HasColumnType("int");

                    b.Property<int?>("FiftiesAmount")
                        .HasColumnType("int");

                    b.Property<int?>("FivesAmount")
                        .HasColumnType("int");

                    b.Property<int?>("HalfDollarAmount")
                        .HasColumnType("int");

                    b.Property<int?>("HundredsAmount")
                        .HasColumnType("int");

                    b.Property<int?>("NicklesAmount")
                        .HasColumnType("int");

                    b.Property<int?>("OnesAmount")
                        .HasColumnType("int");

                    b.Property<int?>("PenniesAmount")
                        .HasColumnType("int");

                    b.Property<int?>("QuartersAmount")
                        .HasColumnType("int");

                    b.Property<int?>("TensAmount")
                        .HasColumnType("int");

                    b.Property<int?>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<int?>("TwentiesAmount")
                        .HasColumnType("int");

                    b.HasKey("MoneyAmountId");

                    b.ToTable("MoneyAmount");
                });

            modelBuilder.Entity("CashHandlerAPI.Models.Transaction", b =>
                {
                    b.Property<long>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("TransactionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Denominations")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("TransactionId");

                    b.HasIndex(new[] { "UserId" }, "IX_Transactions_UserID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CashHandlerAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<long?>("CashBalanceId")
                        .HasColumnType("bigint")
                        .HasColumnName("CashBalanceID");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSignIn")
                        .HasColumnType("datetime");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("MoneyAmountId")
                        .HasColumnType("bigint")
                        .HasColumnName("MoneyAmountID");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("MoneyAmountId");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "CashBalanceId" }, "IX_AspNetUsers_CashBalanceID");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("CashHandlerAPI.Models.Transaction", b =>
                {
                    b.HasOne("CashHandlerAPI.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Transactions_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CashHandlerAPI.Models.User", b =>
                {
                    b.HasOne("CashHandlerAPI.Models.CashBalance", "CashBalance")
                        .WithMany()
                        .HasForeignKey("CashBalanceId");

                    b.HasOne("CashHandlerAPI.Models.MoneyAmount", "MoneyAmount")
                        .WithMany("AspNetUsers")
                        .HasForeignKey("MoneyAmountId")
                        .HasConstraintName("FK_AspNetUsers_MoneyAmount");

                    b.Navigation("CashBalance");

                    b.Navigation("MoneyAmount");
                });

            modelBuilder.Entity("CashHandlerAPI.Models.MoneyAmount", b =>
                {
                    b.Navigation("AspNetUsers");
                });

            modelBuilder.Entity("CashHandlerAPI.Models.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
